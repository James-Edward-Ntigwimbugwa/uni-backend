# Generated by Django 5.2.1 on 2025-06-21 21:20

import academics.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('module_code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon_name', models.CharField(blank=True, help_text='Icon name from Flutter Icons class', max_length=50, null=True)),
                ('color_code', models.CharField(blank=True, help_text='Color code for the course card', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='department_logos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentCourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-enrolled_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a descriptive title for the document', max_length=255)),
                ('document_type', models.CharField(choices=[('pdf', 'PDF Document'), ('doc', 'Word Document (.doc)'), ('docx', 'Word Document (.docx)'), ('xls', 'Excel Spreadsheet (.xls)'), ('xlsx', 'Excel Spreadsheet (.xlsx)'), ('ppt', 'PowerPoint Presentation (.ppt)'), ('pptx', 'PowerPoint Presentation (.pptx)'), ('txt', 'Text Document'), ('csv', 'CSV File'), ('zip', 'ZIP Archive'), ('rar', 'RAR Archive'), ('jpg', 'JPEG Image'), ('jpeg', 'JPEG Image'), ('png', 'PNG Image'), ('gif', 'GIF Image'), ('other', 'Other Format')], max_length=10)),
                ('file', models.FileField(help_text='Supported formats: PDF, Word, Excel, PowerPoint, Text, CSV, ZIP, RAR, Images', upload_to=academics.models.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'csv', 'zip', 'rar', 'jpg', 'jpeg', 'png', 'gif'])])),
                ('description', models.TextField(blank=True, help_text='Optional description of the document content', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to hide this document from students')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='academics.course')),
            ],
            options={
                'verbose_name': 'Course Document',
                'verbose_name_plural': 'Course Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
